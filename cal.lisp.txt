(defvar a)
(defvar b)
(defvar c)

(defun :bits (value &optional (size 64))
  (format t "~v,'~b" size value))

(write-line " Enter two numbers   : ")

	 
  
	(setq  a(read))
   	(setq  b(read))     
       

	(sb-thread:make-thread(lambda()(progn(sleep 0)
				(setf c(+ a b))
				(print "ADDITION in binary: ")
				(format t " ~b" c )
				(print "ADDITION in decimal: ")
				(print c ))))

	(sb-thread:make-thread(lambda()(progn(sleep 0)
				(setf c(- a b))
				(print "SUBTRACTION in binary: ")
				(format t " ~b" c )
				(print "SUBTRACTION in decimal: ")
				(print c))))

 	(sb-thread:make-thread(lambda()(progn(sleep 0)
				(setf c(* a b))
				(print "MULTIPLICATION in binary: ")
				(format t " ~b" c )
				(print "MULTIPLICATION IN DECIMAL: ")
				(print c))))
	
	(sb-thread:make-thread(lambda()(progn(sleep 0)
				(setf c(* a a))
				(print "SQUARE in binary: ")
				(format t " ~b" c )
				(print "SQUARE OF 1st NUMBER  : ")
				(print c))))

	(sb-thread:make-thread(lambda()(progn(sleep 0)
				(setf c(* b b b))
				(print "CUBE OF 2ND NUMBER : ")
				(print c))))	


	(sb-thread:make-thread(lambda()(progn(sleep 0)
				(setf c(sin a))
				(print "SINE OF 1ST NUMBER : ")
				(print c))))

	(sb-thread:make-thread(lambda()(progn(sleep 0)
				(setf c(tan a))
				(print "TAN OF 1ST NUMBER : ")
				(print c))))

	(sb-thread:make-thread(lambda()(progn(sleep 0)
				(setf c(cos a))
				(print "COSINE OF 1ST NUMBER : ")
				(print c))))

	(sb-thread:make-thread(lambda()(progn(sleep 0)
				(setf c(min a b))
				(print "MINIMUM NUMBER : ")
				(print c))))

	(sb-thread:make-thread(lambda()(progn(sleep 0)
				(setf c(max a b))
				(print "MAXIMUM NUMBER : ")
				(print c))))

       

(exit)


//output:-
comp-sl-22@compsl22-OptiPlex-3020:~$ cd Desktop/A3
comp-sl-22@compsl22-OptiPlex-3020:~/Desktop/A3$ sbcl
This is SBCL 1.1.14.debian, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (load "cal.lisp")
 Enter two numbers   : 
10
5

"ADDITION in binary: "  1111
"ADDITION in decimal: " 
15 
"SUBTRACTION in binary: "  101
"SUBTRACTION in decimal: " 
5 
"MULTIPLICATION in binary: "  110010
"MULTIPLICATION IN DECIMAL: " 
50 
"SQUARE in binary: "  1100100
"SQUARE OF 1st NUMBER  : " 
100 
"CUBE OF 2ND NUMBER : " 
125 
"SINE OF 1ST NUMBER : " 
-0.5440211 
"TAN OF 1ST NUMBER : " 
0.64836085 
"COSINE OF 1ST NUMBER : " 
-0.8390715 
"MINIMUM NUMBER : " 
5 
"MAXIMUM NUMBER : " 
10 comp-sl-22@compsl22-OptiPlex-3020:~/Desktop/A3$ 



